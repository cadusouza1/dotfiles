#!/usr/bin/env python

import argparse

import numpy as np


def main() -> None:
    parser = argparse.ArgumentParser(
        description="Script to help with some statistics calculations"
    )

    parser.add_argument("-x", type=float, nargs="+", required=True)
    parser.add_argument("-y", type=float, nargs="+", required=False)

    args = parser.parse_args()

    sample_x = np.array(args.x)
    sample_y = np.array(args.y) if args.y else np.array([])

    for sample in (sample_x, sample_y):
        if not sample.any():
            continue

        mean = np.mean(sample)
        median = np.median(sample)
        sample_variance = np.var(sample, ddof=1)
        sample_deviation = np.std(sample, ddof=1)
        sample_variance_coefficient = sample_deviation / mean
        q1, q2, q3 = np.percentile(sample, [25, 50, 75], method="linear")
        iqd = q3 - q1
        lower_fence = q1 - 3 / 2 * iqd
        upper_fence = q3 + 3 / 2 * iqd

        print(f"{mean=}")
        print(f"{median=}")
        print(f"{sample_variance=}")
        print(f"{sample_deviation=}")
        print(f"{sample_variance_coefficient=}")
        print(f"{(q1, q2, q3, iqd)=}")
        print(f"{upper_fence=}")
        print(f"{lower_fence=}")
        print()

    print()
    if args.y:
        sample_covariance = np.cov(sample_x, sample_y, ddof=1)
        sample_covariance_coefficient = np.corrcoef(sample_x, sample_y)[0, 1]

        print(f"{sample_covariance=}")
        print(f"{sample_covariance_coefficient=}")


if __name__ == "__main__":
    main()
